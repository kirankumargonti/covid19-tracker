{"version":3,"sources":["components/Cards/Cards.jsx","components/API/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","Grid","container","spacing","justify","className","item","component","Card","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","apiURL","fetchData","country","a","updatedURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","countryNames","setCountryNames","useEffect","fetchCountriesAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","setDailyData","fetchDailyAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","src","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d429c27.chunk.js","sourcesContent":["import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { CardContent, Card, Grid, Typography } from '@material-ui/core';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading..!';\r\n  }\r\n  return (\r\n    <Grid container spacing={3} justify='center' className='cards'>\r\n      <Grid item component={Card} xs={12} md={3} className='infected'>\r\n        <CardContent>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            Infected\r\n          </Typography>\r\n\r\n          <Typography variant='h5'>\r\n            <CountUp\r\n              start={0}\r\n              end={confirmed.value}\r\n              duration={2.5}\r\n              separator=','\r\n            />\r\n          </Typography>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant='body2'>\r\n            Number of active cases of COVID-19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid item component={Card} xs={12} md={3} className='recovered'>\r\n        <CardContent>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            Recovered\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            <CountUp\r\n              start={0}\r\n              end={recovered.value}\r\n              duration={2.5}\r\n              separator=','\r\n            />\r\n          </Typography>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant='body2'>\r\n            Number of recoveries from COVID-19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid item component={Card} xs={12} md={3} className='deaths'>\r\n        <CardContent>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            Deaths\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            <CountUp\r\n              start={0}\r\n              end={deaths.value}\r\n              duration={2.5}\r\n              separator=','\r\n            />\r\n          </Typography>\r\n          <Typography color='textSecondary' gutterBottom>\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant='body2'>\r\n            Number of deaths caused by COVID-19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst apiURL = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let updatedURL = apiURL;\r\n\r\n  if (country) {\r\n    updatedURL = `${apiURL}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(updatedURL);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${apiURL}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${apiURL}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../API';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countryNames, setCountryNames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountriesAPI = async () => {\r\n      setCountryNames(await fetchCountries());\r\n    };\r\n    fetchCountriesAPI();\r\n  }, [setCountryNames]);\r\n  \r\n  return (\r\n    <FormControl className='country-picker'>\r\n      <NativeSelect\r\n        defaultValue=''\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=''>Global</option>\r\n        {countryNames.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../API';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchDailyAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchDailyAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: 'orange',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: ['orange', 'green', 'red'],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current State in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div>{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { Component } from 'react';\n\nimport Cards from './components/Cards/Cards';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport Chart from './components/Chart/Chart';\nimport { fetchData } from './components/API';\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({\n      data: fetchedData,\n    });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    console.log(fetchedData);\n    console.log(country);\n    this.setState({\n      data: fetchedData,\n      country: country,\n    });\n  };\n  render() {\n    //destructuring\n    const { data, country } = this.state;\n\n    return (\n      <div>\n        <div className='image-container'>\n          <img src='https://i.ibb.co/7QpKsCX/image.png' alt='COVID-19' />\n        </div>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}